Question:

Given a string, turn each character into its ASCII character code and join them together to create a number - let's call this number total1:

'ABC' --> 'A' = 65, 'B' = 66, 'C' = 67 --> 656667
Then replace any incidence of the number 7 with the number 1, and call this number 'total2':

total1 = 656667
              ^
total2 = 656661
              ^
Then return the difference between the sum of the digits in total1 and total2:

  (6 + 5 + 6 + 6 + 6 + 7)
- (6 + 5 + 6 + 6 + 6 + 1)
-------------------------
                       6

Solution:

function calc(x) {
  
  const total1 = x.split('').map(char => char.charCodeAt(0)).join('');
  const total2 = total1.replace(/7/g, '1');
  const diff = [...total1].reduce((acc, digit) => acc + parseInt(digit), 0) - [...total2].reduce((acc, digit) => acc + parseInt(digit), 0);
  
  return diff;
}